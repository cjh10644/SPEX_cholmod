        -:    0:Source:spex_create_mpz_array.c
        -:    0:Graph:spex_create_mpz_array.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1://------------------------------------------------------------------------------
        -:    2:// SPEX_CHOLMOD/spex_create_mpz_array: create a dense mpz array
        -:    3://------------------------------------------------------------------------------
        -:    4:
        -:    5:// SPEX_CHOLMOD: (c) 2020-2021, Jinhao Chen, Timothy A. Davis, Erick
        -:    6:// Moreno-Centeno, Texas A&M University.  All Rights Reserved.  See
        -:    7:// SPEX_CHOLMOD/License for the license.
        -:    8:
        -:    9://------------------------------------------------------------------------------
        -:   10:
        -:   11:/* Purpose: This function creates an mpz array of size n, and initialize each of * the mpz_t entries.
        -:   12: */
        -:   13:
        -:   14:#include "spex_internal.h"
        -:   15:
    #####:   16:mpz_t* spex_create_mpz_array
        -:   17:(
        -:   18:    int64_t n            // size of the array
        -:   19:)
        -:   20:{
        -:   21:
        -:   22:    //--------------------------------------------------------------------------
        -:   23:    // check inputs
        -:   24:    //--------------------------------------------------------------------------
        -:   25:
    #####:   26:    if (n <= 0) {return NULL;}
        -:   27:
        -:   28:    //--------------------------------------------------------------------------
        -:   29:
        -:   30:    // Malloc space
    #####:   31:    mpz_t* x = (mpz_t*) SPEX_calloc(n, sizeof(mpz_t));
    #####:   32:    if (!x) {return NULL;}
    #####:   33:    for (int64_t i = 0; i < n; i++)
        -:   34:    {
    #####:   35:        if (SPEX_mpz_init(x[i]) != SPEX_OK)
        -:   36:        {
        -:   37:            // Out of memory
    #####:   38:            SPEX_MPZ_SET_NULL(x[i]);
    #####:   39:            for (int64_t j = 0; j < n; j++)
        -:   40:            {
    #####:   41:                if ( x[j] != NULL)
        -:   42:                {
    #####:   43:                    SPEX_MPZ_CLEAR( x[j]);
        -:   44:                }
        -:   45:            }
    #####:   46:            SPEX_FREE(x);
    #####:   47:            return NULL;
        -:   48:        }
        -:   49:    }
    #####:   50:    return x;
        -:   51:}
